//problem No. 14503, ·Îº¿ Ã»¼Ò±â
#include <iostream>
using namespace std;

int N, M, r, c, d;
int map[50][50]; 
int dLeft[4][2] = { {0, -1}, {-1, 0}, {0, 1}, {1, 0} };
int dFront[4][2] = { {-1, 0}, {0, 1}, {1, 0}, {0, -1} };

int main()
{
	cin >> N >> M >> r >> c >> d;
	for (int i = 0; i < N; i++)
		for (int j = 0; j < M; j++)
			cin >> map[i][j];

	int ans = 0, able = 1;
	while (1) {
		cout << "ÇöÀçÁÂÇ¥: (" << r << ", " << c << ")\n";
		if (able) {
			map[r][c] = -1;
			ans++;
			able = 0;
		}

		for (int d = 0; !able && d < 4; d++) {
			if (map[r + dLeft[d][0]][c + dLeft[d][1]] == 0)
				able = 1;

			if (--d == -1) //turnLeft
				d = 3; 
		}

		if (able) {
			r += dFront[d][0];
			c += dFront[d][1];
		}
		else if (map[r - dFront[d][0]][c - dFront[d][1]] != 1) {
			r -= dFront[d][0];
			c -= dFront[d][1];
		}
		else break; //ÀÛµ¿ ¸ØÃã
	}

	cout << ans;
}